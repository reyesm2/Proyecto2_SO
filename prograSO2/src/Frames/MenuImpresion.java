/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import Controlador.Singleton;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileSystemView;
import modelo.Batch;
import modelo.CasilleroMensajes;
import modelo.ColaProcesos;
import modelo.Impresora;
import modelo.Mensaje;
import modelo.Proceso;

/**
 *
 * @author Rigo-PC
 */
public class MenuImpresion extends javax.swing.JFrame {

    /**
     * Creates new form MenuImpresion
     */
    public MenuImpresion() {
        initComponents();
        try {
            eliminarDirectoriosImpresoras();
        } catch (IOException ex) {
            Logger.getLogger(MenuImpresion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList_applicaciones = new javax.swing.JList<>();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea_logApp = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList_sendImpresora = new javax.swing.JList<>();
        jLabel8 = new javax.swing.JLabel();
        jTextField_msgSend = new javax.swing.JTextField();
        jButton_cargarMsg = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList_impresoras = new javax.swing.JList<>();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea_casilleroImpresora = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea_logImpresora = new javax.swing.JTextArea();
        jButton_imprimir = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField_AppPrioridad = new javax.swing.JTextField();
        jTextField_AppName = new javax.swing.JTextField();
        jButton_CrearApp = new javax.swing.JButton();
        button_Batch = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTextField_ImprName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButton_CrearImpr = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jTextField_ImprNameSize = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jTabbedPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane2MouseClicked(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel10.setText("Aplicaciones creadas:");

        jList_applicaciones.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jList_applicaciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList_applicacionesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList_applicaciones);

        jTextArea_logApp.setColumns(20);
        jTextArea_logApp.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        jTextArea_logApp.setRows(5);
        jScrollPane6.setViewportView(jTextArea_logApp);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel13.setText("Log:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 1031, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel7.setText("Impresoras disponibles:");

        jList_sendImpresora.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jList_sendImpresora.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList_sendImpresoraMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jList_sendImpresora);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel8.setText("Mensaje:");

        jTextField_msgSend.setEditable(false);

        jButton_cargarMsg.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton_cargarMsg.setText("Cargar");
        jButton_cargarMsg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_cargarMsgActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("Enviar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(99, 99, 99)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jTextField_msgSend, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                        .addComponent(jButton_cargarMsg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel8))
                .addGap(62, 62, 62))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jTextField_msgSend, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jButton_cargarMsg)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addGap(9, 9, 9)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Aplicaciones", jPanel3);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Impresoras Creadas:");

        jList_impresoras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList_impresorasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jList_impresoras);

        jTextArea_casilleroImpresora.setEditable(false);
        jTextArea_casilleroImpresora.setColumns(20);
        jTextArea_casilleroImpresora.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        jTextArea_casilleroImpresora.setRows(5);
        jScrollPane4.setViewportView(jTextArea_casilleroImpresora);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Cola de mensajes:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Log:");

        jTextArea_logImpresora.setEditable(false);
        jTextArea_logImpresora.setColumns(20);
        jTextArea_logImpresora.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        jTextArea_logImpresora.setRows(5);
        jScrollPane5.setViewportView(jTextArea_logImpresora);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1043, Short.MAX_VALUE)
                    .addComponent(jScrollPane5)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel12))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(192, 192, 192))
        );

        jButton_imprimir.setText("Imprimir");
        jButton_imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_imprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_imprimir)
                        .addGap(91, 91, 91))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton_imprimir))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jButton_imprimir.setVisible(false);

        jTabbedPane2.addTab("Impresoras", jPanel6);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("Definir Aplicaciones");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel2.setText("Nombre:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel3.setText("Prioridad:");

        jTextField_AppPrioridad.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        jTextField_AppName.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        jButton_CrearApp.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jButton_CrearApp.setText("Crear");
        jButton_CrearApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CrearAppActionPerformed(evt);
            }
        });

        button_Batch.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        button_Batch.setText("Batch");
        button_Batch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_BatchActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setText("Ayuda");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jTextField_AppName)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField_AppPrioridad)
                    .addComponent(jButton_CrearApp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(120, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(button_Batch, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_AppName, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_AppPrioridad, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jButton_CrearApp)
                .addGap(103, 103, 103)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_Batch, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(138, Short.MAX_VALUE))
        );

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel4.setText("Definir Impresora");

        jTextField_ImprName.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel5.setText("Nombre:");

        jButton_CrearImpr.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jButton_CrearImpr.setText("Crear");
        jButton_CrearImpr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CrearImprActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel6.setText("Tamaño Cola:");

        jTextField_ImprNameSize.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton_CrearImpr, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField_ImprName, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField_ImprNameSize, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap(241, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_ImprName, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_ImprNameSize, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jButton_CrearImpr)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(161, 161, 161)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(447, 447, 447))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane2.addTab("Creación", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1072, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 701, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_CrearAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CrearAppActionPerformed
        // TODO add your handling code here:
        String nombre = this.jTextField_AppName.getText();
        String prioridad = this.jTextField_AppPrioridad.getText();
        if(!nombre.equals("") && !prioridad.equals("")){
            if(Singleton.getInstance().getControlador().agregarAplicacion(nombre,prioridad)){
                this.mensajeDialog("Aplicación creada con éxito.","Creación éxitosa");
                this.jTextField_AppName.setText("");
                this.jTextField_AppPrioridad.setText("");
            }else{
                this.mensajeDialog("Existe una aplicación con el mismo nombre.", "Existencia aplicación");
            }
        }else{
            this.mensajeDialog("Completo todos los datos.", "Datos Incompletos");
        }
    }//GEN-LAST:event_jButton_CrearAppActionPerformed

    private void jButton_CrearImprActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CrearImprActionPerformed
        // TODO add your handling code here:
        String nombre = this.jTextField_ImprName.getText();
        String size = this.jTextField_ImprNameSize.getText();
        if(!nombre.equals("") && !size.equals("")){
            if(Singleton.getInstance().getControlador().agregarImpresora(nombre,size)){
                this.mensajeDialog("Aplicación creada con éxito.","Creación éxitosa");
                this.jTextField_ImprName.setText("");
                this.jTextField_ImprNameSize.setText("");
            }else{
                this.mensajeDialog("Existe una impresora con el mismo nombre.", "Existencia impresora");
            }
        }else{
            this.mensajeDialog("Completo todos los datos.", "Datos Incompletos");
        }
    }//GEN-LAST:event_jButton_CrearImprActionPerformed

    private void jTabbedPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane2MouseClicked
        // TODO add your handling code here:
        int select = this.jTabbedPane2.getSelectedIndex();
        if(select==1){
            cargarAplicaciones(this.jList_applicaciones);
            cargarImpresoras(this.jList_sendImpresora);
            this.jTextArea_logApp.setText("");
        }else if(select==2){
            cargarImpresoras(this.jList_impresoras);
            this.jTextArea_casilleroImpresora.setText("");
            this.jTextArea_logImpresora.setText("");
        }
    }//GEN-LAST:event_jTabbedPane2MouseClicked

    private void jList_sendImpresoraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList_sendImpresoraMouseClicked
        // TODO add your handling code here:
        //int impresora = this.jList_sendImpresora.getSelectedIndex();
    }//GEN-LAST:event_jList_sendImpresoraMouseClicked

    private void jButton_cargarMsgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_cargarMsgActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());

        int returnValue = jfc.showOpenDialog(null);
		// int returnValue = jfc.showSaveDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = jfc.getSelectedFile();
            
            //System.out.println(selectedFile.getAbsolutePath());
            this.jTextField_msgSend.setText(selectedFile.getAbsolutePath());
        }
    }//GEN-LAST:event_jButton_cargarMsgActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        
        int proceso = this.jList_applicaciones.getSelectedIndex();
        int impresora = this.jList_sendImpresora.getSelectedIndex();
        String contenido = this.jTextField_msgSend.getText();
        
        if(proceso!=-1 && impresora!=-1 && !contenido.equals("")){
            if(Singleton.getInstance().getControlador().validarSizeImpresora(impresora)){
                Singleton.getInstance().getControlador().send(proceso, impresora, contenido);
                this.mensajeDialog("Se envio el mensaje.", "Mensaje enviado.");
                this.jTextField_msgSend.setText("");
                cargarLogApp(proceso);
            }else{
               this.mensajeDialog("Bandeja de entrada llena.", "Impresora llena."); 
            }
        }else{
            this.mensajeDialog("Complete todos los datos.", "Datos Incompletos");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jList_impresorasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList_impresorasMouseClicked
        // TODO add your handling code here:
        int impresora = this.jList_impresoras.getSelectedIndex();
        if(impresora!=-1){
            cargarLogImpresora(impresora);
        }
    }//GEN-LAST:event_jList_impresorasMouseClicked

    private void jButton_imprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_imprimirActionPerformed
        // TODO add your handling code here:
        int impresora = this.jList_impresoras.getSelectedIndex();
        if(impresora!=-1){
            boolean estado = Singleton.getInstance().getControlador().receive(impresora);
            if(estado){
                cargarLogImpresora(impresora);
                this.mensajeDialog("Se realizo la impresión.", "Impresión correcta.");
            }else{
                this.mensajeDialog("No se realizo la impresión.", "Impresión incorrecta.");
            }
        }else{
            this.mensajeDialog("Seleccione una impresora", "Seleción impresora");
        }
    }//GEN-LAST:event_jButton_imprimirActionPerformed

    private void jList_applicacionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList_applicacionesMouseClicked
        // TODO add your handling code here:
        int app = this.jList_applicaciones.getSelectedIndex();
        if(app!=-1){
            cargarLogApp(app);  
        }
        
    }//GEN-LAST:event_jList_applicacionesMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String ayudaSensitiva = "";
      
      
        String contenidoMensaje = Singleton.getInstance().getControlador().getConfiguracionSistema().getFormato().getContenido();
        String largoMensaje =  Singleton.getInstance().getControlador().getConfiguracionSistema().getFormato().getLargo();
        String direccionamiento = Singleton.getInstance().getControlador().getConfiguracionSistema().getDireccionamiento().getTipoDireccionamiento();
        String manejoCola =  Singleton.getInstance().getControlador().getConfiguracionSistema().getManejoColas().getTipo();
        String syncSend =  Singleton.getInstance().getControlador().getConfiguracionSistema().getSincronizacion().getSend();
        String syncReceive =  Singleton.getInstance().getControlador().getConfiguracionSistema().getSincronizacion().getReceive();
        int largo = Singleton.getInstance().getControlador().getConfiguracionSistema().getFormato().getTamano();



        ayudaSensitiva = "El contenido de los mensajes creados será de tipo: " + contenidoMensaje + ".\n" ;

        if(largoMensaje.equals("Largo Fijo")){

            ayudaSensitiva += "El largo fijo de los mensajes indica que no posible crear mensajes que sobrepasen el tamaño establecido" + ".\n";
            ayudaSensitiva += "El tamaño de los mensajes es de " + String.valueOf(largo) + " bytes" + ".\n";

        }
        else{
             ayudaSensitiva += "El largo variable de los mensajes indica que no existe un tamaño limite en bytes para los mensajes" + ".\n";
        }


        switch(direccionamiento){

            case("DirectoReceive Explícito"):{

                 ayudaSensitiva += "El direccionamiento directo establece una comunicación  directa entre procesos. "
                    + "Comandos send específican cual proceso recibirá el mensaje" + ".\n"
                    + "Receive explícito establece que el comando 'receive' especifica de que proceso es recibido el mensaje" + ".\n";

                  break;
            }
            case("DirectoReceive Implícito"):{

                ayudaSensitiva += "El direccionamiento directo establece una comunicación  directa entre procesos. "
                    + "Comandos send específican cual proceso recibirá el mensaje" + ".\n"
                    + " Receive implícito establece que el comando receive no especifique de que proceso es recibido el mensaje" + ".\n";

                break;
            }
            case("IndirectoEstático"):{

                ayudaSensitiva += "El direccionamiento indirecto establece una comunicación entre procesos a través de un mailbox. \n"
                    + " Indirecto Estático establece que el mailbox es reservado por un solo proceso, todo el contenido del mailbox pasa a ser de un único proceso" + ".\n";
                break;
            }
            case("IndirectoDinámico"):{

                ayudaSensitiva += "El direccionamiento indirecto establece una comunicación entre procesos a través de un mailbox. \n"
                    + " Indirecto Dinámico establece que el mailbox no es reservador por ningún proceso, todos los procesos pueden recibir mensajes" + ".\n";
                break;



            }
        }

        // Sync

        if(syncSend.equals("Blocking")){

            ayudaSensitiva += "Sincronización send blocking establece que el proceso que envió el mensaje queda bloqueado hasta " + ".\n" + 
                    " que reciba una notificación de que el mensaje que envió fue recibido" + ".\n" ; 
        }
        else{

             ayudaSensitiva += "Sincronización send Non blocking establece que el proceso no se queda esperando una confirmación " + ".\n" ;


        }

        if(syncReceive.equals("Blocking")){

            ayudaSensitiva += "Sincronización receive blocking establece que el proceso  se queda bloqueado sino hay mensajes para el" + ".\n" ;


        }
        else if(syncReceive.equals("NonBlocking")){

            ayudaSensitiva += "Sincronización receive non blocking establece que el proceso que recibe un mensaje no se queda bloqueado" + ".\n" ;

        }
        else{

            ayudaSensitiva += "Sincronización receive Prueba de llegada establece que el proceso se queda preguntando constantemente si existen mensajes para el" + ".\n" ;

        }

        // Disciplina de manejo

        if(manejoCola.equals("FIFO")){

            ayudaSensitiva += "La disciplina de manejo de colas FIFO establece que el primer mensaje agregado a la cola es el primero en ser enviado" + ".\n";

        }
        else{
            ayudaSensitiva += "La disciplina de manejo de colas por Prioridad establece que el mensaje con la mayor prioridad es el mensaje que procesa" + ".\n";
        }


        this.mensajeDialog(ayudaSensitiva, "Ayuda Sensitiva");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void button_BatchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_BatchActionPerformed
        // TODO add your handling code here:
        
        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());

        int returnValue = jfc.showOpenDialog(null);
		// int returnValue = jfc.showSaveDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = jfc.getSelectedFile();
            Batch batch = new Batch();
            
            try {
                batch.leerArchivo(selectedFile);
                this.mensajeDialog("Configuracion Lista", "Configuracion");
            } catch (IOException ex) {
                this.mensajeDialog("El archivo no puedo ser leido", "Error en el archivo");

            }
            
            System.out.println(selectedFile.getAbsolutePath());
        }      
    }//GEN-LAST:event_button_BatchActionPerformed
    /**
     * Metodo que permite cargar las aplicaciones en JList
     * @param jList 
     */
    public void cargarAplicaciones(JList jList){
        
        DefaultListModel<String> model = new DefaultListModel<>();
        ColaProcesos colaProcesos = Singleton.getInstance().getControlador().getListaAplicaciones();
        for (Proceso listaProceso : colaProcesos.getListaProcesos()) {
            model.addElement(listaProceso.getNombre());
        }
        jList.setModel(model);
    }
    /**
     * Metodo que permite cargar las impresoras en JList
     * @param jList 
     */
    public void cargarImpresoras(JList jList){
        DefaultListModel<String> model = new DefaultListModel<>();
        ArrayList<Impresora> listaImpresoras = Singleton.getInstance().getControlador().getListaImpresoras();
        for(Impresora impresora : listaImpresoras){
            model.addElement(impresora.getProceso().getNombre());
        }
        jList.setModel(model);
    }
    /**
     * Metodo que elimina las anteriores impresoras creadas
     * @throws IOException 
     */
    public void eliminarDirectoriosImpresoras() throws IOException{
        String current = new java.io.File( "." ).getCanonicalPath();
                    current+="\\Impresoras\\";
        File directorio = new File(current);
        File[] ficheros = directorio.listFiles();
        for (int x=0;x<ficheros.length;x++){
            if (ficheros[x].isDirectory()) {
                ficheros[x].delete();
            }
        }
        
    }
    
    public void cargarLogApp(int app){
        String log = Singleton.getInstance().getControlador().obtenerLogAplicacion(app);
        this.jTextArea_logApp.setText(log);
    }
    
    public void cargarLogImpresora(int impresora){
        String mensajesCasillero = Singleton.getInstance().getControlador()
                    .getListaImpresoras().get(impresora)
                    .getCasilleroMensajes().getCasilleroString();
            this.jTextArea_casilleroImpresora.setText(mensajesCasillero);
            String log = Singleton.getInstance().getControlador().getListaImpresoras().get(impresora).getProceso().getLogEventos(100);
            this.jTextArea_logImpresora.setText(log);
    }
    public void mensajeDialog(String mensaje, String tituloBarra){
        
        JOptionPane.showMessageDialog(null, mensaje, tituloBarra, JOptionPane.INFORMATION_MESSAGE);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuImpresion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuImpresion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuImpresion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuImpresion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuImpresion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_Batch;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton_CrearApp;
    private javax.swing.JButton jButton_CrearImpr;
    private javax.swing.JButton jButton_cargarMsg;
    private javax.swing.JButton jButton_imprimir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList_applicaciones;
    private javax.swing.JList<String> jList_impresoras;
    private javax.swing.JList<String> jList_sendImpresora;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextArea jTextArea_casilleroImpresora;
    private javax.swing.JTextArea jTextArea_logApp;
    private javax.swing.JTextArea jTextArea_logImpresora;
    private javax.swing.JTextField jTextField_AppName;
    private javax.swing.JTextField jTextField_AppPrioridad;
    private javax.swing.JTextField jTextField_ImprName;
    private javax.swing.JTextField jTextField_ImprNameSize;
    private javax.swing.JTextField jTextField_msgSend;
    // End of variables declaration//GEN-END:variables
}
